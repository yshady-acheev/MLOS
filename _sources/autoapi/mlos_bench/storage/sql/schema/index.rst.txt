mlos_bench.storage.sql.schema
=============================

.. py:module:: mlos_bench.storage.sql.schema

.. autoapi-nested-parse::

   DB schema definition for the :py:class:`~mlos_bench.storage.sql.storage.SqlStorage`
   backend.

   .. rubric:: Notes

   The SQL statements are generated by SQLAlchemy, but can be obtained using
   ``repr`` or ``str`` (e.g., via ``print()``) on this object.
   The ``mlos_bench`` CLI will do this automatically if the logging level is set to
   ``DEBUG``.



Classes
-------

.. autoapisummary::

   mlos_bench.storage.sql.schema.DbSchema


Module Contents
---------------

.. py:class:: DbSchema(engine: sqlalchemy.engine.Engine)

   A class to define and create the DB schema.

   Declare the SQLAlchemy schema for the database.


   .. py:method:: __repr__() -> str

      Produce a string with all SQL statements required to create the schema from
      scratch in current SQL dialect.

      That is, return a collection of CREATE TABLE statements and such.
      NOTE: this method is quite heavy! We use it only once at startup
      to log the schema, and if the logging level is set to DEBUG.

      :returns: **sql** -- A multi-line string with SQL statements to create the DB schema from scratch.
      :rtype: str



   .. py:method:: create() -> DbSchema

      Create the DB schema.



   .. py:attribute:: config


   .. py:attribute:: config_param


   .. py:attribute:: experiment


   .. py:attribute:: objectives


   .. py:attribute:: trial


   .. py:attribute:: trial_param


   .. py:attribute:: trial_result


   .. py:attribute:: trial_status


   .. py:attribute:: trial_telemetry


